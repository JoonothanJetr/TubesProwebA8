openapi: 3.0.0
info:
  title: Catering E-commerce API
  description: API untuk aplikasi e-commerce catering
  version: 1.0.0
  contact:
    email: support@cateringku.com

servers:
  - url: http://localhost:3000/api
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        email:
          type: string
        role:
          type: string
          enum: [admin, customer]

    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
        image_url:
          type: string
        category:
          type: string
        stock:
          type: integer

    Order:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        total_amount:
          type: number
        status:
          type: string
          enum: [pending, processing, completed, cancelled]
        payment_status:
          type: string
          enum: [unpaid, paid]

    Review:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        product_id:
          type: integer
        rating:
          type: integer
          minimum: 1
          maximum: 5
        comment:
          type: string

paths:
  /auth/register:
    post:
      summary: Registrasi user baru
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
                  enum: [admin, customer]
      responses:
        '201':
          description: User berhasil dibuat
        '400':
          description: Data tidak valid atau user sudah ada

  /auth/login:
    post:
      summary: Login user
      tags: [Authentication]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login berhasil
        '400':
          description: Kredensial tidak valid

  /products:
    get:
      summary: Mendapatkan semua produk
      tags: [Products]
      responses:
        '200':
          description: Daftar produk
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    
    post:
      summary: Membuat produk baru
      tags: [Products]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: Produk berhasil dibuat
        '401':
          description: Tidak terautentikasi
        '403':
          description: Tidak memiliki akses

  /products/{id}:
    get:
      summary: Mendapatkan detail produk
      tags: [Products]
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Detail produk
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Produk tidak ditemukan

  /cart:
    get:
      summary: Mendapatkan keranjang belanja
      tags: [Cart]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Isi keranjang belanja
        '401':
          description: Tidak terautentikasi

    post:
      summary: Menambah item ke keranjang
      tags: [Cart]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - product_id
                - quantity
              properties:
                product_id:
                  type: integer
                quantity:
                  type: integer
      responses:
        '201':
          description: Item berhasil ditambahkan
        '401':
          description: Tidak terautentikasi

  /orders:
    get:
      summary: Mendapatkan semua pesanan
      tags: [Orders]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Daftar pesanan
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Tidak terautentikasi

    post:
      summary: Membuat pesanan baru
      tags: [Orders]
      security:
        - bearerAuth: []
      responses:
        '201':
          description: Pesanan berhasil dibuat
        '401':
          description: Tidak terautentikasi

  /reviews:
    post:
      summary: Membuat ulasan baru
      tags: [Reviews]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - product_id
                - rating
              properties:
                product_id:
                  type: integer
                rating:
                  type: integer
                  minimum: 1
                  maximum: 5
                comment:
                  type: string
      responses:
        '201':
          description: Ulasan berhasil dibuat
        '401':
          description: Tidak terautentikasi 